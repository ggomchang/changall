1. vpc

2. bastion

3. eks

4. code series


--내가 할거--

!!!!!!!!!!
EKS생성 후 root user kube auth file 복사
sudo cp /home/ec2-user/.kube root/.kube -r
sudo ls -al /root/.kube
테스트 꼭 하기
!!!!!!!!!!

1. terraform 실행

3. bastion에 필요한거 설치(docker, git, kubectl, eksctl, helm)

4. eks clsuter 생성(그동안 나머지 파일 작성)

5. docker image 생성

6. argocd install
- https://argo-cd.readthedocs.io/en/stable/getting_started/#1-install-argo-cd

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

configmap 적용해주고 다시 컨트롤러랑 서버 재부팅

kubectl -n argocd rollout restart deploy argocd-repo-server
kubectl -n argocd rollout restart statefulset argocd-application-controller

- 설치하고 service유형을 loadbalancer로 바꾸기까지
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

7. argo rollouts install
- https://argoproj.github.io/argo-rollouts/installation/

kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml

curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
chmod +x ./kubectl-argo-rollouts-linux-amd64
sudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts

- 이렇게까지 해줘야 rollouts kubectl 플러그인이 설치됨

8. eks 매니페스트 적용(rollouts 생성전에 service먼저 만들어야 함)
- kubectl apply -k <디렉터리명>

9. 매니페스트 codecommit 업로드 -> app codecommit 업로드(매니페스트가 업로드가 되어있어야 codebuild에서 사용가능함)
- 매니페스트를 업로드할 때 eks폴더안에 rollouts.yaml, ingress.yaml, service.yaml만 넣고 업로드하기

10. 다 하고 test를 위해서 test.txt.파일을 업로드해서 실행해볼것

git config --global credential.helper '!aws codecommit credential-helper $@'
git config --global credential.UseHttpPath true