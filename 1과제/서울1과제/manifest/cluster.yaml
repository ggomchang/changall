apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: wsi-test-cluster
  region: ap-northeast-2
  version: '1.29'

vpc:
  subnets:
    private:
      ap-northeast-2a:
        id: subnet-02858b4f0799c8239
      ap-northeast-2b:
        id: subnet-09e54e73e7c4bac13
  # clusterEndpoints:
  #   privateAccess: true
  #   publicAccess: false

secretsEncryption:
  keyARN: arn:aws:kms:ap-northeast-2:702661606257:key/7cae393b-9bdc-411f-add5-0c97d115d94a

fargateProfiles:
  - name: wsi-app-fargate
    selectors:
      - namespace: wsi
        labels:
          app: order
    podExecutionRoleARN: arn:aws:iam::702661606257:role/fargatePodExecutionRole

managedNodeGroups:
  - name: wsi-app-nodegroup
    updateConfig:
      maxUnavailable: 1
    labels:
      nodeType: app
    amiFamily: Bottlerocket
    instanceType: m5.xlarge
    instanceName: wsi-app-node
    minSize: 2
    maxSize: 64
    desiredCapacity: 2
    volumeSize: 30
    privateNetworking: true
    taints:
      - key: type
        value: "app"
        effect: NoSchedule
    iam:
      withAddonPolicies:
        imageBuilder: true
  - name: wsi-addon-nodegroup
    updateConfig:
      maxUnavailable: 1
    labels:
      nodeType: addon
    amiFamily: Bottlerocket
    instanceType: t4g.large
    instanceName: wsi-addon-node
    minSize: 2
    maxSize: 64
    desiredCapacity: 2
    volumeSize: 30
    privateNetworking: true
    iam:
      withAddonPolicies:
        imageBuilder: true
        autoScaler: true
        externalDNS: true
        certManager: true
        appMesh: true
        appMeshPreview: true
        ebs: true
        fsx: true
        efs: true
        awsLoadBalancerController: true
        xRay: true
        cloudWatch: true

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: fluent-bit
        namespace: logging
      attachPolicyARNs:
      - "arn:aws:iam::aws:policy/CloudWatchFullAccess"

cloudWatch:
  clusterLogging:
    enableTypes: ["*"]

addons:
  - name: vpc-cni
    version: latest
    attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    resolveConflicts: overwrite
  - name: amazon-cloudwatch-observability
    version: latest
    tags:
      team: eks
    resolveConflicts: overwrite

